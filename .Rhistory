ma_depth(x,m,m)
# import this library for Mahalnobis depth
library(ddalpha)
ma_depth <- function(x, data, theta){
return(depth.Mahalanobis(x, data))
}
?matrix()
?rnorm()
data_test <- matrix(data = rnorm(25),
nrow = 5,
ncol =5)
x_test <- data_test[1,]
x_test
data_test
ma_depth(x_test,data_test,0)
x_test <- data_test[1:2,]
View(x_test)
depth.Mahalanobis(x_test, data_test)
data_test <- matrix(data = rnorm(25),
nrow = 5,
ncol =5)
x_test <- data_test[1:2,]
depth.Mahalanobis(x_test, data_test)
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
depth.Mahalanobis(x_test, data_test)
ma_depth(x_test,data_test,0)
ma_depth(x_test,data_test,1)
dim(x_test)
dim(x_test)[1]
dim(x_test)[[1]]
x_test[1]
x_test[[1]
x_test[[1]]
x_test[[1]]
x_test
x[1]
x_test[1]
data_test[1]
data_test[[1]]
dim(x_test)[[1]]
dim(x_test)[1]
test_fun <- function(x, y){}
test_fun <- function(x, y){
x+y
}
test_fun(1,2)
test_fun(1,c(2,3))
dot(c(1,2),c(2,3))
dot(c(1,2),matrix(c(1,2,3,4),2,2)
dot(c(1,2),matrix(c(1,2,3,4),2,2))
dot(c(1,2),matrix(c(1,2,3,4),2,2))
matrix(, nrow = 1, ncol = 1)
matrix(c(1,2,3,4,5,6),2,3)
matrix(c(1,2,3,4,5,6),2,3)[1,]
x_test <- matrix(c(1,2,3,4,5,6),2,3)
x_test[1,] <- c(2,4,5)
x_test
?apply
c(1,5)
t(c(1,2,3))
tc(1,2,3)
c(1,2,3)
matrix(t(c(1,2,3),3,2)
matrix(t(c(1,2,3),3,2))
matrix(t(c(1,2,3),3,2))
matrix(t(c(1,2,3)),3,2)
?matrix()
matrix(c(1,2,3),3,2)
matrix(c(1,2,3),2,3)
matrix(c(1,2,3),2,3, byrow = TRUE)
vector("numeric", length = n)
vector("numeric", length = 3)
x_test <- vector("numeric", length=5)
x_test
x_test[1]<- 1
x_test
x_test[[1]]<-2
x_test
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
ma_depth(x_test, data_test, 0)
?theta
my_vector <- c(5, 3, 8, 2, 7, 6)
sum(my_vector[-1] > my_vector[1])
floor(1.43)
2 * 3
3<4
df <- data.frame(team=c('Mavs', 'Spurs', 'Rockets', 'Nets'),
points=c(140, 115, 109, 98))
df$(team, points)
df$team, points
df$team
df$team $points
?optim
list(name = allen)$allen
list(name = allen)$name
list(name = 13)$name
rbind(c(1,2),matrix(c(3,4,5,6),2,2))
set.seed(0)
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
ma_depth(x_test, data_test, 0)
library(ddalpha)
# the Mahalanobis depth (modified to also take in a parameter theta)
# x: each row of x is a vector whose distance we want to compute,
# data: an (R+1) by d matrix containing (R+1) vectors
ma_depth <- function(x, data, theta){
return(depth.Mahalanobis(x, data))
}
set.seed(0)
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
ma_depth(x_test, data_test, 0)
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
ma_depth(x_test, data_test, 0)
data_test <- matrix(data = rnorm(50),
nrow = 10,
ncol =5)
x_test <- data_test[1:2,]
ma_depth(x_test, data_test, 0)
